' Диаграмма, описывающая решение задачи
' Михедов Константин Константинович БИБ224
' 
' Формулировка задачи
' В операционной системе путь к файлу состоит из имени логического
' диска и названий каталогов, в которых находится этот файл. Части
' пути разделены знаками "\"  (обратный слеш).  Требуется  разбить
' заданный путь к файлу на части - имя диска и названия каталогов.
' Программа  должна вывести  имя диска и названия  всех каталогов,
' составляющих путь. Каждый элемент выводится в отдельной строке.
'
@startuml PathParsingTask

:Начало работы программы;

:Получаем путь к фалу;

:Создаем пустую строку для сохранения временных данных;
note left
  Далее я буду называть его кэшем 
  ====
  Нужно указать фиксированную длину для этой строки
  Например в 256 символов (такая максимальная длина имени папки)
  И <b>ОБЯЗАТЕЛЬНО</b> заполнить нулями (символ '\0' тоже подойдет)
end note

:По очереди перебираем все символы в пути к файлу;

while (Остались необработанные символы?) is (Да)
  floating note left
    Возможно будет полезно:
    ====
    Для заполнения строки нулями можно использовать
    функцию strcpy, если в качестве строки ты используешь
    массив char (C-style string)
    ====
    Если это Modern C++ строки, то есть std::string, то их
    1. Можно не заполнять нулями
    2. создавать просто пустыми, они из коробки поддерживают конкатенацию
    ====
    Считать путь к исходному файлу можно или с консоли
    через scanf, std::getline или что-то тому подобное
    Или передав путь в качестве аргумента программы, то есть
    запустив программу так <i>app.exe C://path/to/file.txt</i> 
    и считать путь из массива argv
  end note

  :Получаем текущий символ;

  if (Он является символом "\"?) then(Да)
    :Тогда то, что хранится в кеше является
    или именем диска, или именем каталога;

    :Выводим содержимое кеша на экран;
    note right
      Не забыть про переход на новую строку
    end note

    :Очищаем кеш;
    note right
      Заполняем нулями
    end note
  else (Нет)
    :Сохраняем его в конец кеша;
  endif

  :Переходим к следующему символу;
endwhile (Нет)

:Завершение работы программы;

@enduml
